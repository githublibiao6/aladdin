<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <artifactId>odin-parent</artifactId>
    <groupId>com.aladdin.mis</groupId>
    <version>0.1-SNAPSHOT</version>
    <relativePath>../odin-parent/pom.xml</relativePath>
  </parent>

  <groupId>com.aladdin.mis</groupId>
  <artifactId>extract-dao</artifactId>
  <version>0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>extract-dao</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
    <package.path>${project.build.directory}/${project.artifactId}</package.path>
    <main.class>com.aladdin.mis.DaoApplication</main.class>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.aladdin.mis</groupId>
      <artifactId>extract-pojo</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.mybatis.spring.boot</groupId>
      <artifactId>mybatis-spring-boot-starter</artifactId>
      <version>1.3.0</version>
    </dependency>

    <!-- druid-->
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>druid-spring-boot-starter</artifactId>
      <version>1.1.10</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>2.5</version>
        <executions>
          <execution>
            <id>auto-clean</id>
            <phase>initialize</phase>
            <goals>
              <goal>clean</goal>
            </goals>
            <configuration>
              <skip>false</skip>
              <filesets>
                <fileset>
                  <directory>${package.path}</directory>
                </fileset>
              </filesets>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <!--MANIFEST.MF 中 Class-Path 加入前缀-->
              <classpathPrefix>../lib/</classpathPrefix>
              <!--jar包不包含唯一版本标识-->
              <useUniqueVersions>false</useUniqueVersions>
              <mainClass>${main.class}</mainClass>
            </manifest>
            <manifestEntries>
              <Class-Path>../config/</Class-Path>
            </manifestEntries>
          </archive>
          <!--不打包资源文件-->
          <excludes>
            <exclude>*.**</exclude>
            <exclude>*/*.xml</exclude>
            <exclude>*.properties</exclude>
            <exclude>*.yml</exclude>
            <exclude>*/*.properties</exclude>
            <exclude>*/*.yml</exclude>
          </excludes>
          <outputDirectory>${package.path}/bin</outputDirectory>
        </configuration>
      </plugin>
      <!--拷贝依赖 copy-dependencies-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>
                ${package.path}/lib/
              </outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!--拷贝资源文件 copy-resources-->
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>src/main/resources</directory>
                </resource>
              </resources>
              <outputDirectory>${package.path}/config</outputDirectory>
            </configuration>
          </execution>
          <!--copy 脚本，把bin目录下的文件复制到，打包目录下-->
          <execution>
            <id>copy-bin</id>
            <phase>package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>bin/</directory>
                </resource>
              </resources>
              <outputDirectory>${package.path}/bin</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- spring boot repackage -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <!-- 　注：layout 必须是 ZIP 、 excludeGroupIds 中时忽略也是就需要打在外部的 jar 、 根据自己项目的情况进行配置 -->
          <layout>ZIP</layout>
          <!--使用外部配置文件，jar包里没有资源文件-->
          <addResources>true</addResources>
          <outputDirectory>${package.path}/bin</outputDirectory>
          <includes>
            <include>
              <groupId>non-exists</groupId>
              <artifactId>non-exists</artifactId>
            </include>
          </includes>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
            <configuration>
              <!--配置jar包特殊标识 配置后，保留原文件，生成新文件 *-run.jar -->
              <!--配置jar包特殊标识 不配置，原文件命名为 *.jar.original，生成新文件 *.jar -->
              <!--<classifier>run</classifier>-->
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!--maven打包时，跳过测试-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
